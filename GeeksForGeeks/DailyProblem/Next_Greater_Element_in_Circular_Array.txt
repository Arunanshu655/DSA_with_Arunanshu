Topics: Stack

class Solution {
    public ArrayList<Integer> nextLargerElement(int[] arr) {
        // code here
        int max = arr[0];
        for(int a : arr) max = Math.max(a,max);
        int n = arr.length;
        ArrayList<Integer> ans = new ArrayList<>();
        Stack<Integer> st = new Stack<>();
        for(int i = n-1 ; i >= 0 ; i--){
            
            while(!st.isEmpty() && st.peek()<=arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                st.push(arr[i]);
                ans.add(0,-1);
            }
            else {
                ans.add(0,st.peek());
                st.push(arr[i]);
            }
        }
        for(int i = n-1 ; i >= 0 ; i--){
            
            while(!st.isEmpty() && st.peek()<=arr[i]){
                st.pop();
            }
            if(st.isEmpty()){
                st.push(arr[i]);
                ans.set(i,-1);
            }
            else {
                ans.set(i,st.peek());
                st.push(arr[i]);
            }
        }
        
        return ans;
    }
}

Time Conplexity: O(n);
Auxiliary Space: O(n);

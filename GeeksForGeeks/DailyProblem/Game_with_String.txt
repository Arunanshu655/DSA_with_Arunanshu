Topics: Heap, String

class Solution {
    public int minValue(String s, int k) {
        // code here
        int[] freq = new int[26];
        PriorityQueue<Integer> pq = new PriorityQueue<>((a,b)->Integer.compare(freq[b],freq[a]));
        int n = s.length();
        
        for(int i = 0 ; i < n ; i++) freq[s.charAt(i)-'a']++;
        for(int i = 0 ; i < 26 ; i++) if(freq[i]!=0) pq.add(i);
        int ans = 0 ;
        
        while(!pq.isEmpty() && k!=0){
            int curr = pq.poll();
            freq[curr]--;
            k--;
            if(freq[curr]!=0) pq.add(curr);
        }

        while(!pq.isEmpty()){
            int i = pq.poll();
            ans += (freq[i]*freq[i]);
        }
        
        return ans;
    }
}

Time Complesity: O(n)
Auxiliary Space: O(n)

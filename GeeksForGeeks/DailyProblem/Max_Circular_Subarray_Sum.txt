Topics: Kedane

class Solution {
    public int maxCircularSum(int arr[]) {
        // code here
        int currMax = arr[0];
        int currMin = arr[0];
        int min = arr[0];
        int max = arr[0];
        int totalSum = arr[0];
        int n = arr.length;
        
        for(int i = 1 ; i < n ; i++){
            currMax = Math.max(currMax+arr[i],arr[i]);
            max = Math.max(max,currMax);
            
            currMin = Math.min(currMin+arr[i],arr[i]);
            min = Math.min(min,currMin);
            
            totalSum += arr[i];
        }
        
        int cirSum = totalSum - min;
        if(min == totalSum) return max;
        return Math.max(max,cirSum);
    }
}


Time Complexity: O(n)
Auxiliary Space: O(1)

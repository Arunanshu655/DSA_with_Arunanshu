Topics: prefix Sum, Arrays

class Solution {
    public int countHillValley(int[] nums) {
        int left = nums[0];
        int n = nums.length;
        int[] right = new int[n];
        right[n-1] = -1;
        for(int i = n - 2 ; i >=0 ; i--){
            if(nums[i+1] != nums[i]){
               right[i] = nums[i+1]; 
            }else right[i] = right[i+1];
        }
        int ans = 0;
        for(int i = 1 ; i < n - 1 ; i++){
            if(right[i]==-1) break;
            if(nums[i-1]!=nums[i]){
                if(right[i]>nums[i] && nums[i-1]>nums[i]) ans++;
                else if(right[i]<nums[i] && nums[i-1]<nums[i]) ans++;
            }
            
        }
        return ans;
    }
}
Time Complexity: O(n)
Auxiliary Space: O(n)
